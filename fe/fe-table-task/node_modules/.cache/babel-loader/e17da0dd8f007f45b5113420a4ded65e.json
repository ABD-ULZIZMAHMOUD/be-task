{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zizo\\\\go\\\\src\\\\be-task\\\\fe\\\\fe-table-task\\\\src\\\\components\\\\BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    // columns: columns,\n    data //data: data,\n\n  });\n  const {\n    getTableBodyProps,\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(col => /*#__PURE__*/_jsxDEV(\"th\", { ...col.getHeaderProps(),\n          children: col.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n            children: cell.render(\"Cell\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","tableInstance","getTableBodyProps","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","col","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["C:/Users/Zizo/go/src/be-task/fe/fe-table-task/src/components/BasicTable.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport MOCK_DATA from \"./MOCK_DATA.json\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport \"./table.css\";\r\n\r\nexport const BasicTable = () => {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n  const tableInstance = useTable({\r\n    columns, // columns: columns,\r\n    data, //data: data,\r\n  });\r\n  const { getTableBodyProps, getTableProps, headerGroups, rows, prepareRow } =\r\n    tableInstance;\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((col) => (\r\n              <th {...col.getHeaderProps()}>{col.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => (\r\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,aAAP;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;EACA,MAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;EACA,MAAMK,aAAa,GAAGN,QAAQ,CAAC;IAC7BI,OAD6B;IACpB;IACTC,IAF6B,CAEvB;;EAFuB,CAAD,CAA9B;EAIA,MAAM;IAAEE,iBAAF;IAAqBC,aAArB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC;EAAxD,IACJL,aADF;EAEA,oBACE,sBAAWE,aAAa,EAAxB;IAAA,wBACE;MAAA,UACGC,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;QAAA,UACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,GAAD,iBACvB,mBAAQA,GAAG,CAACC,cAAJ,EAAR;UAAA,UAA+BD,GAAG,CAACE,MAAJ,CAAW,QAAX;QAA/B;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,sBAAWX,iBAAiB,EAA5B;MAAA,UACGG,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;QACjBR,UAAU,CAACQ,GAAD,CAAV;QACA,oBACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;UAAA,UACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,iBACb,mBAAQA,IAAI,CAACC,YAAL,EAAR;YAAA,UAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;UAA9B;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QADF;MAOD,CATA;IADH;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAlCM;;GAAMf,U;UAGWH,Q;;;KAHXG,U"},"metadata":{},"sourceType":"module"}